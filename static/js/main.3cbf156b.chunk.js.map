{"version":3,"sources":["pages/Search/components/Weather.tsx","pages/Enter/components/Header.tsx","assets/sky.mp4","pages/Enter/components/VideoBG.tsx","pages/Enter/index.tsx","pages/components/Navbar.tsx","pages/Saved/components/Body.tsx","pages/Saved/index.tsx","pages/Search/components/Body.tsx","pages/Search/index.tsx","App.tsx","index.tsx"],"names":["storedFavCities","cities","Header","className","to","VideoBG","autoPlay","muted","loop","src","bg","type","Enter","Navbar","window","location","pathname","Icon","name","size","color","Component","displayCard","tempComment","tempImg","weatherTemplate","sys","country","main","temp","temp_max","temp_min","feels_like","humidity","wind","speed","Body","useState","citiesData","setCitiesData","favouriteCities","localStorage","getItem","JSON","parse","forEach","element","cityObj","text","value","key","push","getWeather","e","a","fetch","process","res","ok","console","log","json","resData","data","Dropdown","placeholder","fluid","search","selection","options","onChange","Card","Image","alt","wrapped","ui","Content","Meta","Description","extra","Button","icon","onClick","alert","filter","length","setItem","stringify","href","target","rel","index","cityNames","Weather","comment","i","place","includes","toast","title","description","animation","time","Label","as","ribbon","Grid","stackable","textAlign","Row","columns","Column","weather","width","height","position","city","setCity","open","setOpen","localData","localMainData","formSubmit","preventDefault","trim","message","Container","onSubmit","currentTarget","Modal","basic","onClose","onOpen","Actions","inverted","App","basename","exact","path","Search","Saved","ReactDOM","render","document","getElementById"],"mappings":"2NAOIA,EACAC,E,yCCWWC,EAfI,WACjB,OACE,gCACE,sBAAKC,UAAU,UAAf,UACE,oBAAI,WAAS,YAAY,kBAAgB,SAAzC,oBACA,mBAAG,WAAS,cAAZ,4BAEF,sBAAKA,UAAU,iBAAf,UACE,cAAC,IAAD,CAAMC,GAAG,UAAUD,UAAU,gBAAgB,WAAS,UAAtD,SAAgE,6CAChE,uBAAO,WAAS,gBAAhB,6DCbO,MAA0B,gCCc1BE,EAVK,WAClB,OACE,8BACE,uBAAOC,UAAQ,EAACC,OAAK,EAACC,MAAI,EAACL,UAAU,WAArC,SACE,wBAAQM,IAAKC,EAAIC,KAAK,mBCQfC,G,OATG,WAChB,OACE,sBAAKT,UAAU,aAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,S,4DCLeU,G,mKACnB,WACE,OACE,qBAAKV,UAAU,gBAAf,SACE,+BACE,6BAAI,cAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,SAAS,WAAS,iBAAzC,sBAE0B,kBAA7BW,OAAOC,SAASC,SACf,oBAAIb,UAAU,QAAQ,WAAS,gBAA/B,SAA+C,eAAC,IAAD,CAAMC,GAAG,UAAT,UAAmB,cAACa,EAAA,EAAD,CAAMC,KAAK,QAAQC,KAAK,QAAQC,MAAM,UAAzD,cAE/C,oBAAIjB,UAAU,QAAQ,WAAS,gBAA/B,SAA+C,eAAC,IAAD,CAAMC,GAAG,SAAT,UAAkB,cAACa,EAAA,EAAD,CAAMC,KAAK,QAAQC,KAAK,QAAQC,MAAM,QAAxD,8B,GAVvBC,c,wECAhCC,GAAc,EAGdC,EAAsB,GACtBC,EAAkB,GAGlBC,EAAkB,CACpBP,KAAM,GACNQ,IAAK,CACHC,QAAS,IAEXC,KAAM,CACJC,KAAM,GACNC,SAAU,GACVC,SAAU,GACVC,WAAY,GACZC,SAAU,IAEZC,KAAM,CACJC,MAAO,KAyIIC,EArIE,WAEf,MAAoCC,mBAASZ,GAA7C,mBAAOa,EAAP,KAAmBC,EAAnB,KAGMC,EAAqG,GAGvGxC,EAAuByC,aAAaC,QAAQ,YAC5CzC,EAAwB0C,KAAKC,MAAM5C,GAGxB,OAAXC,GACFA,EAAO4C,SAAQ,SAAAC,GACb,IAAIC,EAAU,CACZC,KAAMF,EACNG,MAAOH,EACPI,IAAKJ,GAEPN,EAAgBW,KAAKJ,MAKzB,IAAMK,EAAU,uCAAG,WAAOC,EAAP,wBAAAC,EAAA,6DAAeL,EAAf,EAAeA,MAAf,SAECM,MAAM,qDAAD,OAAsDN,EAAtD,+BAAkFO,qCAFxF,WAEXC,EAFW,QAIRC,GAJQ,gBAKfC,QAAQC,IAAIH,GALG,8BAOfnC,GAAc,EAPC,UAQoBmC,EAAII,OARxB,QAQTC,EARS,QASTC,EAAYD,GACTlC,KAAKI,YAAc,IAC1BT,EAAc,sCACdC,EAAU,gGACDuC,EAAKnC,KAAKI,aAAe,IAAM+B,EAAKnC,KAAKI,YAAc,GAChET,EAAc,wDACdC,EAAU,wMACDuC,EAAKnC,KAAKI,WAAa,GAAK+B,EAAKnC,KAAKI,WAAa,IAC5DT,EAAc,kCACdC,EAAU,oGACDuC,EAAKnC,KAAKI,YAAc,IAAM+B,EAAKnC,KAAKI,YAAc,IAC/DT,EAAc,2BACdC,EAAU,8FAEVD,EAAc,iDACdC,EAAU,6EAEZe,EAAcwB,GA1BC,4CAAH,wDAoDhB,OACE,qBAAK5D,UAAU,cAAf,SACE,gCACE,qBAAI,WAAS,aAAb,UAA0B,cAACc,EAAA,EAAD,CAAMC,KAAK,QAAQC,KAAK,UAAlD,mBAA2E,cAACF,EAAA,EAAD,CAAMC,KAAK,QAAQC,KAAK,aACnG,qBAAKhB,UAAU,wBAAwB,WAAS,gBAAhD,SACE,cAAC6D,EAAA,EAAD,CACEC,YAAY,gBACZC,OAAK,EACLC,QAAM,EACNC,WAAS,EACTnB,OAAK,EACLoB,QAAS7B,EACT8B,SAAUlB,EACVjD,UAAU,kBAIXmB,GAAmC,KAApBgB,EAAWpB,KAE3B,qBAAKf,UAAU,cAAf,SACE,sBAAKA,UAAU,mBAAmB,WAAS,YAA3C,UACE,eAACoE,EAAA,EAAD,CAAML,OAAK,EAAX,UACE,cAACM,EAAA,EAAD,CAAO/D,IAAKe,EAASiD,IAAI,gBAAgBC,SAAO,EAACC,IAAI,EAAO,WAAS,YACrE,eAACJ,EAAA,EAAKK,QAAN,WACE,eAACL,EAAA,EAAKrE,OAAN,CAAaC,UAAU,iBAAiB,WAAS,kBAAjD,UACE,cAACc,EAAA,EAAD,CAAMC,KAAK,uBAAuBC,KAAK,UAAUmB,EAAWpB,KAD9D,IACqEoB,EAAWZ,IAAIC,WAEpF,cAAC4C,EAAA,EAAKM,KAAN,UACE,sBAAM1E,UAAU,OAAO,WAAS,eAAhC,SAAgDoB,MAElD,eAACgD,EAAA,EAAKO,YAAN,WACE,oBAAG,WAAS,gBAAZ,UAA4B,cAAC7D,EAAA,EAAD,CAAMC,KAAK,iBAAiBC,KAAK,SAA7D,iBAAoFmB,EAAWV,KAAKC,KAAK,4CACzG,oBAAG,WAAS,iBAAZ,UAA6B,cAACZ,EAAA,EAAD,CAAMC,KAAK,MAAMC,KAAK,UAAnD,aAAuEmB,EAAWV,KAAKE,SAAS,4CAChG,oBAAG,WAAS,gBAAZ,UAA4B,cAACb,EAAA,EAAD,CAAMC,KAAK,YAAYC,KAAK,UAAxD,aAA4EmB,EAAWV,KAAKG,SAAS,4CACrG,oBAAG,WAAS,iBAAZ,UAA6B,cAACd,EAAA,EAAD,CAAMC,KAAK,iBAAiBC,KAAK,SAA9D,eAAmFmB,EAAWV,KAAKI,WAAW,4CAC9G,oBAAG,WAAS,kBAAZ,UAA8B,cAACf,EAAA,EAAD,CAAMC,KAAK,OAAOC,KAAK,UAArD,aAAyEmB,EAAWV,KAAKK,SAAzF,OACA,oBAAG,WAAS,eAAZ,UAA2B,cAAChB,EAAA,EAAD,CAAMC,KAAK,OAAOC,KAAK,UAAlD,eAAwEmB,EAAWJ,KAAKC,MAAxF,eAGJ,cAACoC,EAAA,EAAKK,QAAN,CAAcG,OAAK,EAAnB,SACE,eAACC,EAAA,EAAD,CAAQd,OAAK,EAAC9C,MAAM,MAAM6D,MAAI,EAACC,QA9D5B,WACjBC,MAAM,GAAD,OAAI7C,EAAWpB,KAAf,uCAELjB,EAASA,EAAOmF,QAAO,SAAA/B,GAAC,OAAIA,IAAC,UAAQf,EAAWpB,SAGhDsB,EAAgB6C,OAAS,EACzBpF,EAAO4C,SAAQ,SAAAC,GACb,IAAIC,EAAU,CACZC,KAAMF,EACNG,MAAOH,EACPI,IAAKJ,GAEPN,EAAgBW,KAAKJ,MAGvBN,aAAa6C,QAAb,WAAiC3C,KAAK4C,UAAUtF,IAC1B,IAAlBA,EAAOoF,SACT/D,GAAc,IA4CkD,WAAS,kBAA7D,UACE,cAACL,EAAA,EAAD,CAAMC,KAAK,UADb,sBAMJ,uBAAO,WAAS,UAAhB,SAA0B,mBAAGsE,KAAI,gEAA2DlD,EAAWpB,MAAQuE,OAAO,SAASC,IAAI,aAAzG,+CAI9B,mCC3IKC,EAXG,WAChB,OACE,qCACE,cAAC,EAAD,IACA,qBAAKxF,UAAU,6BAAf,SACE,cAAC,EAAD,U,sDPFJyF,EAA2B,GA+GhBC,EA9Ea,SAAC,GAAY,IAGnCC,EAHwB/B,EAAU,EAAVA,KAU5B,GALA/D,EAAkByC,aAAaC,QAAQ,YACvCzC,EAAS0C,KAAKC,MAAM5C,GAEpB4F,EAAY,GAEY,OAApB5F,EACF,IAAK,IAAI+F,EAAI,EAAGA,EAAI9F,EAAOoF,OAAQU,IACjCH,EAAUzC,KAAKlD,EAAO8F,IAI1B,OAAa,OAAThC,EACM,MAIR+B,EADE/B,EAAKnC,KAAKC,MAAQ,EACV,6CACDkC,EAAKnC,KAAKC,KAAO,GAAKkC,EAAKnC,KAAKC,MAAQ,GACvC,4CAEA,iDAIV,sBAAK1B,UAAU,oBAAf,UACE,qBAAI,WAAS,gBAAb,UAA6B,cAACc,EAAA,EAAD,CAAMC,KAAK,uBAAuBC,KAAK,SAAU4C,EAAK7C,KACjF,qCAAQ6C,EAAKrC,IAAIC,cAEnB,qBAAKxB,UAAU,kBAAkB,WAAS,UAAU,oBAAkB,OAAtE,SACE,cAACc,EAAA,EAAD,CAAMC,KAAK,aAAaf,UAAU,QAAQgB,KAAK,UAEjD,qBAAKhB,UAAU,aAAa,WAAS,YAArC,SACE,yBAAQA,UAAU,oBAAoB+E,QAAS,kBA9DpCc,EA8DoDjC,EAAK7C,UA5D1D,OAAXjB,GAAmBA,EAAOgG,SAASD,IAAWJ,EAAUK,SAASD,GACpEE,gBAAM,CACJvF,KAAM,UACNsE,KAAM,uBACNkB,MAAO,yBACPC,YAAY,uBACZC,UAAW,OACXC,KAAM,OAGRV,EAAUzC,KAAK6C,GACfvD,aAAa6C,QAAb,WAAiC3C,KAAK4C,UAAUK,IAChDM,gBAAM,CACJvF,KAAM,QACNsE,KAAM,QACNkB,MAAO,sBACPC,YAAY,GAAD,OAAKJ,EAAL,oCACXK,UAAW,WACXC,KAAM,QApBM,IAACN,GA8DX,UAA2E,cAAC/E,EAAA,EAAD,CAAMC,KAAK,QAAQC,KAAK,UAAnG,2BAEF,sBAAKhB,UAAU,kBAAkB,WAAS,UAA1C,UACE,qBAAKA,UAAU,oBAAf,SACE,sBAAKA,UAAU,UAAf,UACE,eAACoG,EAAA,EAAD,CAAOC,GAAG,OAAOpF,MAAM,MAAMqF,QAAM,EAAnC,UACA,cAACxF,EAAA,EAAD,CAAMC,KAAK,UAAUC,KAAK,UACvB4C,EAAK7C,QAER,qBAAKf,UAAU,eAAf,SACE,cAACuG,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAA1B,SACE,eAACF,EAAA,EAAKG,IAAN,CAAUC,QAAS,EAAnB,UACE,eAACJ,EAAA,EAAKK,OAAN,WACA,oBAAG,WAAS,gBAAZ,UAA4B,cAAC9F,EAAA,EAAD,CAAMC,KAAK,iBAAiBC,KAAK,SAA7D,iBAAqF4C,EAAKnC,KAAKC,KAAK,4CACpG,oBAAG,WAAS,YAAZ,UAAwB,cAACZ,EAAA,EAAD,CAAMC,KAAK,MAAMC,KAAK,UAA9C,aAAmE4C,EAAKnC,KAAKE,SAAS,4CACtF,oBAAG,WAAS,gBAAZ,UAA4B,cAACb,EAAA,EAAD,CAAMC,KAAK,YAAYC,KAAK,UAAxD,aAA6E4C,EAAKnC,KAAKG,SAAS,4CAChG,uBACA,oBAAG5B,UAAU,UAAU,WAAS,eAAhC,kCAAqE4D,EAAKiD,QAAQ,GAAGZ,YACnF,qBAAK3F,IAAG,2CAAsCsD,EAAKiD,QAAQ,GAAG/B,KAAtD,QAAkEgC,MAAM,KAAKC,OAAO,KAAKzC,IAAI,eAGvG,eAACiC,EAAA,EAAKK,OAAN,WACA,oBAAG,WAAS,aAAZ,UAAyB,cAAC9F,EAAA,EAAD,CAAMC,KAAK,iBAAiBC,KAAK,SAA1D,eAAgF4C,EAAKnC,KAAKI,WAAW,4CACrG,oBAAG,WAAS,eAAZ,UAA2B,cAACf,EAAA,EAAD,CAAMC,KAAK,OAAOC,KAAK,UAAlD,aAAuE4C,EAAKnC,KAAKK,SAAjF,OACA,oBAAG,WAAS,gBAAZ,UAA4B,cAAChB,EAAA,EAAD,CAAMC,KAAK,OAAOC,KAAK,UAAnD,eAA0E4C,EAAK7B,KAAKC,MAApF,SACA,uBACA,mBAAGhC,UAAU,UAAU,WAAS,eAAhC,SAAgD2F,mBAO1D,qBAAK3F,UAAU,QAAf,SACE,cAAC,yBAAD,CAAwBgH,SAAS,2BQrB5B/E,EAhFE,WAEf,MAAwBC,mBAAS,IAAjC,mBAAO+E,EAAP,KAAaC,EAAb,KAEA,EAAwBhF,oBAAS,GAAjC,mBAAOiF,EAAP,KAAaC,EAAb,KAEMC,EAAiB/E,aAAaC,QAAQ,uBACtC+E,EAAqB9E,KAAKC,MAAM4E,GAOhCE,EAAU,uCAAG,WAAOrE,GAAP,mBAAAC,EAAA,6DACjBD,EAAEsE,iBAEkB,KAAhBP,EAAKQ,QACPL,GAAQ,GAJO,kBAQGhE,MAAM,qDAAD,OAAsD6D,EAAtD,+BAAiF5D,qCARzF,WAQTC,EARS,QAUNC,GAVM,iCAWgBD,EAAII,OAXpB,OAWPC,EAXO,OAYbH,QAAQC,IAAIE,EAAQ+D,SACpBN,GAAQ,GAbK,yBAeoB9D,EAAII,OAfxB,QAeTC,EAfS,OAkBfrB,aAAa6C,QAAQ,sBAAuB3C,KAAK4C,UAAUzB,IAlB5C,yFAuBjBuD,EAAQ,IAvBS,0DAAH,sDAyBhB,OACE,mCACE,sBAAKlH,UAAU,wBAAf,UACE,eAAC2H,EAAA,EAAD,CAAW3H,UAAU,eAArB,UACE,oBAAIA,UAAU,aAAa,WAAS,eAApC,+BACA,uBAAMA,UAAU,sCAAsC,WAAS,UAAU4H,SAAUL,EAAnF,UACE,uBACE/G,KAAK,OACLsD,YAAY,oBACZhB,MAAOmE,EACP9C,SAxCO,SAACjB,GAClBgE,EAAQhE,EAAE2E,cAAc/E,UAyChB,wBAAQ9C,UAAU,uBAAlB,uBAEF,cAAC,EAAD,CAAS4D,KAAM0D,OAEjB,eAACQ,EAAA,EAAD,CACEC,OAAK,EACLC,QAAS,kBAAMZ,GAAQ,IACvBa,OAAQ,kBAAMb,GAAQ,IACtBD,KAAMA,EACNnG,KAAK,QALP,UAOE,eAAC,IAAD,CAAQ8D,MAAI,EAAC9E,UAAU,cAAvB,UACE,cAACc,EAAA,EAAD,CAAMC,KAAK,yBACX,qDAEF,eAAC+G,EAAA,EAAMrD,QAAP,WACE,mBAAGzE,UAAU,aAAb,4CACA,cAAC8H,EAAA,EAAMI,QAAP,CAAelI,UAAU,eAAzB,SACE,eAAC6E,EAAA,EAAD,CAAQ5D,MAAM,QAAOkH,UAAQ,EAACpD,QAAS,kBAAMqC,GAAQ,IAArD,UACE,cAACtG,EAAA,EAAD,CAAMC,KAAK,cADb,uBClECyE,G,OATG,WAChB,OACE,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,S,QCgBS4C,EAlBC,WACd,OACE,cAAC,IAAD,CAAQC,SAAS,UAAjB,SACE,sBAAKrI,UAAU,OAAf,UACE,cAAC,IAAD,CAAOsI,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,UAAlB,SACE,cAACC,EAAD,MAEF,cAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,SAAlB,SACE,cAACE,EAAD,Y,OCbVC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3cbf156b.chunk.js","sourcesContent":["// imports..........................\nimport { FC } from 'react'\nimport { WeatherData } from '../../../types'\nimport { SemanticToastContainer, toast } from 'react-semantic-toasts';\nimport { Label, Grid, Icon } from 'semantic-ui-react'\n\n// Setting city variables globally\nlet storedFavCities: any;\nlet cities: Array<string>;\nlet cityNames: Array<string> = [];\n\n// Weather data props\ntype Props = {\n  data: WeatherData\n}\n\n// Add city to favourites\nconst favButton = (place:string) => {\n  // If city exists already, notify user, else set favourite city to local storage\n  if ((cities !== null && cities.includes(place)) || cityNames.includes(place)) {\n    toast({\n      type: 'warning',\n      icon: 'exclamation triangle',\n      title: 'Already have that city',\n      description: `Try a different city`,\n      animation: 'tada',\n      time: 2000\n    });\n  } else {\n    cityNames.push(place)\n    localStorage.setItem(`fav-city`, JSON.stringify(cityNames))\n    toast({\n      type: 'error',\n      icon: 'heart',\n      title: 'Added to Favourites',\n      description: `${place} has been added your favourites!`,\n      animation: 'fly down',\n      time: 2000\n    });\n  }\n}\n\nconst Weather: FC<Props>  = ({data}) => {\n\n  // console.log(data)\n  let comment: string;\n  // Get favourite cities from local storage\n  storedFavCities = localStorage.getItem(\"fav-city\");\n  cities = JSON.parse(storedFavCities)\n  // Set container for cities\n  cityNames = [];\n  // If there are favuorite cities, assign them to the container\n  if (storedFavCities !== null) {\n    for (let i = 0; i < cities.length; i++) {\n      cityNames.push(cities[i]);\n    }\n  }\n  // If no city has been searched yet, don't display card\n  if (data === null) {\n    return (null)\n  }\n  // Set weather data comments depending on temp\n  if (data.main.temp <= 0) {\n    comment = \"Dont't forget to wear a jacket🧥\";\n  } else if (data.main.temp > 0 && data.main.temp <= 25) {\n    comment = \"Enjoy the great weather🏖️\"\n  } else {\n    comment = \"Don't forget your sunglasses🕶️\"\n  }\n  // console.log(data)\n  return (\n    <div className=\"weather-container\">\n      <h1 data-aos=\"fade-up-right\"><Icon name='map marker alternate' size='tiny' />{data.name}  \n        <span> {data.sys.country}</span>\n      </h1>\n      <div className=\"caret-container\" data-aos=\"fade-up\" data-aos-duration=\"6000\">\n        <Icon name='caret down' className=\"caret\" size='big' />\n      </div>\n      <div className=\"fav-button\" data-aos=\"fade-down\">\n        <button className=\"ui red big button\" onClick={() => favButton(data.name)}><Icon name='heart' size='small' /> Save to Favourites</button>\n      </div>\n      <div className=\"current-weather\" data-aos=\"flip-up\">\n        <div className=\"ui red fluid card\">\n          <div className=\"content\">\n            <Label as='span' color='red' ribbon>\n            <Icon name='map pin' size='small' />\n              {data.name}\n            </Label>\n            <div className=\"weather-data\">\n              <Grid stackable textAlign='center'>\n                <Grid.Row columns={2}>\n                  <Grid.Column>\n                  <p data-aos=\"fade-up-right\"><Icon name='circle outline' size='tiny' />Current Temp: {data.main.temp}<sup>&#8451;</sup></p>\n                  <p data-aos=\"fade-left\"><Icon name='sun' size='small' />Max Temp: {data.main.temp_max}<sup>&#8451;</sup></p>\n                  <p data-aos=\"fade-up-right\"><Icon name='snowflake' size='small' />Min Temp: {data.main.temp_min}<sup>&#8451;</sup></p>\n                  <br/>\n                  <p className=\"details\" data-aos=\"fade-up-left\">Weather Description: {data.weather[0].description}\n                    <img src={`http://openweathermap.org/img/wn/${data.weather[0].icon}.png`} width=\"50\" height=\"50\" alt=\"logo\"/>\n                  </p>\n                  </Grid.Column>\n                  <Grid.Column>\n                  <p data-aos=\"fade-right\"><Icon name='circle outline' size='tiny' />Feels Like: {data.main.feels_like}<sup>&#8451;</sup></p>\n                  <p data-aos=\"fade-up-left\"><Icon name='rain' size='small' />Humidity: {data.main.humidity}%</p>\n                  <p data-aos=\"fade-up-right\"><Icon name='leaf' size='small' />Wind Speed: {data.wind.speed}m/s</p>\n                  <br/>\n                  <p className=\"details\" data-aos=\"fade-up-left\">{comment}</p>\n                  </Grid.Column>\n                </Grid.Row>\n              </Grid>\n            </div>\n          </div>\n        </div>\n        <div className=\"toast\">\n          <SemanticToastContainer position=\"bottom-right\" />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Weather\n","// imports..........................\nimport { FC } from 'react'\nimport { Link } from 'react-router-dom';\n\nconst Header: FC = () => {\n  return (\n    <div>\n      <div className=\"wrapper\">\n        <h1 data-aos=\"fade-down\" data-aos-easing=\"linear\">SKYDIA</h1>\n        <p data-aos=\"zoom-out-up\">Weather App</p>\n      </div>\n      <div className=\"bottom-wrapper\">\n        <Link to=\"/search\" className=\"enter-wrapper\" data-aos=\"zoom-in\"><button>Enter</button></Link>\n        <small data-aos=\"zoom-out-down\">created with ☮️ &amp; ❤️</small>\n      </div>\n    </div>\n  )\n}\n\nexport default Header\n","export default __webpack_public_path__ + \"static/media/sky.0f7d682f.mp4\";","// imports..........................\nimport { FC } from 'react'\nimport bg from \"../../../assets/sky.mp4\"\n\nconst VideoBG: FC = () => {\n  return (\n    <div>\n      <video autoPlay muted loop className=\"video-bg\">\n        <source src={bg} type=\"video/mp4\"/>\n      </video>\n    </div>\n  )\n}\n\nexport default VideoBG\n","// imports..........................\nimport { FC } from 'react'\nimport Header from './components/Header'\nimport VideoBG from './components/VideoBG'\nimport './style.css'\n\n\nconst Enter: FC = () => {\n  return (\n    <div className=\"main-enter\">\n      <VideoBG />\n      <Header />\n    </div>\n  )\n}\n\nexport default Enter\n","// imports..........................\nimport { Component } from 'react'\nimport { Link } from 'react-router-dom';\nimport { Icon } from 'semantic-ui-react'\nimport \"./style.css\"\n\nexport default class Navbar extends Component {\n  render() {\n    return (\n      <div className=\"nav-container\">\n        <ul>\n          <li><Link to=\"/\" className=\"skydia\" data-aos=\"zoom-out-right\">SKYDIA</Link></li>\n          {/* if on saved page, display search page else display saved page */}\n          {window.location.pathname === \"/skydia/saved\" ? (\n            <li className=\"right\" data-aos=\"zoom-out-left\"><Link to=\"/search\"><Icon name='share' size='small' color=\"black\" />Search</Link></li>\n            ) : (\n            <li className=\"right\" data-aos=\"zoom-out-left\"><Link to=\"/saved\"><Icon name='heart' size='small' color=\"red\" />My Favourites</Link></li>\n          )}\n        </ul>\n      </div>\n    )\n  }\n}\n","// imports.....................................\nimport { useState, FC } from 'react'\nimport { WeatherData } from '../../../types';\nimport { Dropdown, DropdownItemProps, Button, Icon, Card, Image } from 'semantic-ui-react'\n\n// Don't display card on reload\nlet displayCard = false;\n\n// Set weather additional data to empty\nlet tempComment: string = \"\";\nlet tempImg: string = \"\";\n\n// Empty data template for state\nlet weatherTemplate = {\n  name: \"\",\n  sys: {\n    country: \"\"\n  },\n  main: {\n    temp: \"\",\n    temp_max: \"\",\n    temp_min: \"\",\n    feels_like: \"\",\n    humidity: \"\",\n  },\n  wind: {\n    speed: \"\"\n  }\n};\n\nconst Body: FC = () => {\n  // Set state to empty\n  const [citiesData, setCitiesData] = useState(weatherTemplate)\n\n  // Set dropdown favourite city options\n  const favouriteCities: DropdownItemProps[] | { text: string; value: string; key: string; }[] | undefined = [];\n\n  // Get favourite cities from local storage\n  let storedFavCities: any = localStorage.getItem(\"fav-city\");\n  let cities: Array<string> = JSON.parse(storedFavCities)\n\n  // Set local storage favourite cities to dropdown options\n  if (cities !== null) {\n    cities.forEach(element => {\n      let cityObj = {\n        text: element,\n        value: element,\n        key: element\n      }\n      favouriteCities.push(cityObj)\n    });\n  }\n\n  // Get weather\n  const getWeather = async (e:any, {value}: any) => {\n    // Fetch data\n    const res = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${value}&units=metric&appid=${process.env.REACT_APP_API_KEY}`);\n    // If faulty response, display error, else display favourite city card and set additional comments for depending on the temp\n    if (!res.ok) {\n      console.log(res);\n    } else {\n      displayCard = true;\n      const resData: WeatherData = await res.json();\n      const data: any = resData\n      if (data.main.feels_like < -10 ) {\n        tempComment = \"It's freezing grab a hot chocolate!\"\n        tempImg = \"https://c4.wallpaperflare.com/wallpaper/364/79/684/snow-8k-tree-forest-wallpaper-preview.jpg\"\n      } else if (data.main.feels_like >= -10 && data.main.feels_like <= 5) {\n        tempComment = \"It's pretty cold out there, don't forget your jacket!\"\n        tempImg = \"https://c4.wallpaperflare.com/wallpaper/350/698/382/nature-landscapes-trees-forests-autumn-fall-seasons-winter-snow-frost-shore-lakes-grass-leaves-cold-high-resolution-images-wallpaper-preview.jpg\"\n      } else if (data.main.feels_like > 5 && data.main.feels_like < 20) {\n        tempComment = \"It's slightly chilly out there!\"\n        tempImg = \"https://hdfreewallpaper.net/wp-content/uploads/2015/08/nice-summer-season-hd-wallpapers-free.jpg\"\n      } else if (data.main.feels_like >= 20 && data.main.feels_like <= 30) {\n        tempComment = \"Enjoy the great weather!\"\n        tempImg = \"https://p4.wallpaperbetter.com/wallpaper/1021/17/157/summer-scenery-wallpaper-preview.jpg\"\n      } else {\n        tempComment = \"It's pretty hot, don't forget your sunglasses!\"\n        tempImg = \"https://www.teahub.io/photos/full/288-2884225_temperature-hot-weather.jpg\"\n      }\n      setCitiesData(data)\n    }\n  }\n  // Delete city\n  const deleteCity = () => {\n    alert(`${citiesData.name} has been removed from favourites!`)\n    // Filter out the city that's been deleted\n    cities = cities.filter(e => e !== `${citiesData.name}`);\n    // console.log(cities)\n    // Set dropdown options to zero then re-calculate the cities\n    favouriteCities.length = 0\n    cities.forEach(element => {\n      let cityObj = {\n        text: element,\n        value: element,\n        key: element\n      }\n      favouriteCities.push(cityObj)\n    });\n    // Update local storage favourite cities\n    localStorage.setItem(`fav-city`, JSON.stringify(cities))\n    if (cities.length === 0) {\n      displayCard = false\n    } \n  }\n\n  return (\n    <div className=\"fav-wrapper\">\n      <div>\n        <h1 data-aos=\"zoom-in-up\"><Icon name='heart' size='small'/>Favourite Cities<Icon name='heart' size='small'/></h1>\n        <div className=\"city-select-container\" data-aos=\"zoom-out-down\">\n          <Dropdown\n            placeholder='Select a city'\n            fluid\n            search\n            selection\n            value\n            options={favouriteCities}\n            onChange={getWeather}\n            className=\"city-select\"\n          />\n        </div>\n        {\n          (displayCard && citiesData.name !== \"\")\n          ?\n          <div className=\"fav-wrapper\">\n            <div className=\"fav-weather-data\" data-aos=\"flip-down\">\n              <Card fluid>\n                <Image src={tempImg} alt=\"Weather Image\" wrapped ui={false} data-aos=\"zoom-in\" />\n                <Card.Content>\n                  <Card.Header className=\"fav-city-title\" data-aos=\"fade-down-right\">\n                    <Icon name='map marker alternate' size='small'/>{citiesData.name} {citiesData.sys.country}\n                  </Card.Header>\n                  <Card.Meta>\n                    <span className='date' data-aos=\"fade-up-left\">{tempComment}</span>\n                  </Card.Meta>\n                  <Card.Description>\n                    <p data-aos=\"fade-up-right\"><Icon name='circle outline' size='tiny'/>Current Temp: {citiesData.main.temp}<sup>&#8451;</sup></p>\n                    <p data-aos=\"fade-down-left\"><Icon name='sun' size='small'/>Max Temp: {citiesData.main.temp_max}<sup>&#8451;</sup></p>\n                    <p data-aos=\"fade-up-right\"><Icon name='snowflake' size='small'/>Min Temp: {citiesData.main.temp_min}<sup>&#8451;</sup></p>\n                    <p data-aos=\"fade-down-left\"><Icon name='circle outline' size='tiny'/>Feels Like: {citiesData.main.feels_like}<sup>&#8451;</sup></p>\n                    <p data-aos=\"fade-down-right\"><Icon name='rain' size='small'/>Humidity: {citiesData.main.humidity}%</p>\n                    <p data-aos=\"fade-up-left\"><Icon name='leaf' size='small'/>Wind Speed: {citiesData.wind.speed}m/s</p>\n                  </Card.Description>\n                </Card.Content>\n                <Card.Content extra>\n                  <Button fluid color=\"red\" icon onClick={deleteCity} data-aos=\"fade-down-right\">\n                    <Icon name='trash' />\n                    Delete City\n                  </Button>\n                </Card.Content>\n              </Card>\n              <small data-aos=\"zoom-in\"><a href={`https://www.accuweather.com/en/search-locations?query=${citiesData.name}`} target=\"_blank\" rel=\"noreferrer\">Click for more information</a></small>\n            </div>\n          </div>\n          :\n          <></>\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default Body","// imports..........................\nimport { FC } from 'react'\nimport './style.css'\nimport Navbar from \"../components/Navbar\"\nimport Body from \"./components/Body\"\n\nconst index: FC = () => {\n  return (\n    <>\n      <Navbar />\n      <div className=\"favourite-cities-container\">\n        <Body />\n      </div>\n    </>\n  )\n}\n\nexport default index\n","// imports.........................\nimport { Container, Button, Header, Icon, Modal } from 'semantic-ui-react'\nimport { FC, FormEvent, useState } from 'react'\nimport { WeatherData } from '../../../types';\nimport Weather from './Weather'\n\n// Error response types\ninterface Error {\n  cod: string;\n  message: string;\n}\n\nconst Body: FC = () => {\n  // City input state\n  const [city, setCity] = useState(\"\");\n  // Modal state\n  const [open, setOpen] = useState(false)\n  // Get weather data from local storage\n  const localData: any = localStorage.getItem(\"searchedWeatherData\");\n  const localMainData: any = JSON.parse(localData);\n  // On form input change, set state accordingly\n  const formChange = (e: FormEvent<HTMLInputElement>) => {\n    setCity(e.currentTarget.value);\n  }\n  \n  // Submit form\n  const formSubmit = async (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    // If input is empty display modal\n    if (city.trim() === \"\") {\n      setOpen(true)\n    }\n    try {\n      // Fetch weather data\n      const res = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${process.env.REACT_APP_API_KEY}`);\n      // If response error, display modal\n      if (!res.ok) {\n        const resData: Error = await res.json();\n        console.log(resData.message);\n        setOpen(true)\n      }\n      const resData: WeatherData = await res.json();\n      // console.log(resData);\n      // Set weather data to local storage\n      localStorage.setItem('searchedWeatherData', JSON.stringify(resData));\n    }catch(err) {\n      return err\n    }\n    // Set input to empty\n    setCity(\"\")\n  }\n  return (\n    <>\n      <div className=\"search-body-container\">\n        <Container className=\"body-wrapper\">\n          <h1 className=\"title-desc\" data-aos=\"zoom-in-down\">Search for a city</h1>\n          <form className=\"ui action huge input search-wrapper\" data-aos=\"zoom-in\" onSubmit={formSubmit}>\n            <input \n              type=\"text\" \n              placeholder=\"Enter a city name\"\n              value={city}\n              onChange={formChange}\n            />\n            <button className=\"ui huge black button\">Search</button>\n          </form>\n          <Weather data={localMainData} />\n        </Container>\n        <Modal\n          basic\n          onClose={() => setOpen(false)}\n          onOpen={() => setOpen(true)}\n          open={open}\n          size='small'\n        >\n          <Header icon className=\"modal-title\">\n            <Icon name='exclamation triangle' />\n            <span>Incorrect City</span>\n          </Header>\n          <Modal.Content>\n            <p className=\"modal-desc\">Please enter a valid city name</p>\n            <Modal.Actions className=\"modal-button\">\n              <Button color='green'inverted onClick={() => setOpen(false)}>\n                <Icon name='checkmark' /> Ok\n              </Button>\n            </Modal.Actions>\n          </Modal.Content>\n        </Modal>\n      </div>\n    </>\n  )\n}\n\nexport default Body","// imports...........................\nimport Navbar from \"../components/Navbar\"\nimport Body from \"./components/Body\"\nimport './style.css'\nimport { FC } from 'react';\n\nconst index: FC = () => {\n  return (\n    <div>\n      <Navbar />\n      <Body />\n    </div>\n  )\n}\n\nexport default index\n","// imports..........................\nimport './App.css';\nimport Enter from './pages/Enter/index'\nimport Saved from './pages/Saved/index';\nimport Search from './pages/Search/index';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { FC } from 'react';\n\nconst App: FC = () => {\n  return (\n    <Router basename=\"/skydia\">\n      <div className=\"main\">\n        <Route exact path=\"/\">\n          <Enter />\n        </Route>\n        <Route exact path=\"/search\">\n          <Search />\n        </Route>\n        <Route exact path=\"/saved\">\n          <Saved />\n        </Route>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;","// imports..........................\nimport ReactDOM from 'react-dom';\nimport App from './App';\n// semantic-ui......................\nimport 'semantic-ui-css/semantic.min.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}